matanel.pataki, nmic2120
Matanel Pataki (205951023), Nadav Michael (305792012)
EX: 1

FILES:
todo

Part 1: Theoretical Questions -

    1.  A video game - Where different user-level-threads are handling
        different aspects in the game. One thread could handle the user input,
        while another handles a game object, and a third thread handles
        rendering the image to the screen. In a fast-pacing game, we could take
        advantage of the low overhead involve in a user-level-threads as
        apposed to kernel-level-thread or a process,
        resulting in a much smoother user experience.

    2.  Advantages - The different tabs a totally separated at the hardware
        level. so, if one tab or website crashes of is infected with a malware,
        the rest of the tabs and system are safe.
        We will get a more secure experience and less prone to disruptions.
        Disadvantages - Because of the overhead involved in switching process,
        the overall program will run less smoothly, and many more resources
        will be exhausted by the program (high RAM usage).


    3.

    4. Virtual time is the time taken by the CPU to complete a task if there were no interruptions
       (I/O delays, scheduler time-outs etc). The unit of time is the memory reference time. For example,
       if the CPU executes for virtual time {x}, then it generated {x} memory references.
       To convert from virtual time to real time, we must know how long it takes to complete one (1) memory reference,
       and then multiply the number of references by the conversion factor.

    5. sigsetjmp() receives two parameters – (sigjmp_buf  env , int savemask )
       The registers and stack environment are saved in env, to be later used by siglongjmp().
       If savemask is != 0, the calling process’s scheduling parameters and signal mask are saved as well.
       We are able to jump back to this code location and state using siglongjmp().
       Sigsetjmp() returns 0 if returning directly, or a user-defined value if we just arrived using siglongjmp()
       Siglongjmp() receives (sigjmp_buf env, int val) and jumps to the code location and restores CPU state in env.





	

